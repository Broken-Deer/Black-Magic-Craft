#main {
    transition: all 0.3s cubic-bezier(0.18, 0.89, 0.32, 1.28);
    /* margin-bottom: 2rem; */
}

body {
    width: 100vw;
    height: 100vh;
    padding: 5px;
}

.btn_ {
    position: relative;
    overflow: hidden;
}

.btn_ span,
.btn_dark_ span {
    position: absolute;
    width: 30px;
    height: 30px;
    background-color: #fff;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    animation: animate .8s ease;
}

.btn_dark_ span {
    background-color: #000;
}

@keyframes animate {
    from {
        width: 0;
        height: 0;
        opacity: 0.5;
    }

    to {
        width: 400px;
        height: 400px;
        opacity: 0;
    }
}

.input-error {
    background: #e500001c !important;
    outline: 1.5px solid #c70000 !important;
    transform: scale(1);
    animation: err1 .15s cubic-bezier(1, 1, 1, 1), err2 .15s cubic-bezier(1, 1, 1, 1) .15s;
}

.input-error * {
    color: #c70000;
}

@keyframes err1 {
    from {
        transform: scale(1);
    }

    to {
        transform: scale(1.04);
    }
}

@keyframes err2 {
    from {
        transform: scale(1.04);
    }

    to {
        transform: scale(1);
    }
}

/* 从谷歌那偷来的加载动画 */
.mspin-medium {
    width: 36px;
    height: 36px;
    overflow: hidden;
    -webkit-animation: mspin-rotate 1568.63ms infinite linear;
    -moz-animation: mspin-rotate 1568.63ms infinite linear;
    animation: mspin-rotate 1568.63ms infinite linear;
    transition: opacity 0.3s ease;
    margin: 0;
}

.mspin-medium>div {
    -webkit-animation: mspin-revrot 5332ms infinite steps(4);
    -moz-animation: mspin-revrot 5332ms infinite steps(4);
    animation: mspin-revrot 5332ms infinite steps(4);
}

.mspin-medium>div>div {
    background-image: url("../images/loading.svg");
    background-size: 100%;
    width: 11664px;
    height: 36px;
    -webkit-animation: mspin-medium-film 5332ms infinite steps(324);
    -moz-animation: mspin-medium-film 5332ms infinite steps(324);
    animation: mspin-medium-film 5332ms infinite steps(324);
}

@-webkit-keyframes mspin-medium-film {
    from {
        -webkit-transform: translateX(0);
    }

    to {
        -webkit-transform: translateX(-11664px);
    }
}

@-webkit-keyframes mspin-rotate {
    from {
        -webkit-transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(360deg);
    }
}

@-webkit-keyframes mspin-revrot {
    from {
        -webkit-transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(-360deg);
    }
}

@-moz-keyframes mspin-medium-film {
    from {
        -moz-transform: translateX(0);
    }

    to {
        -moz-transform: translateX(-11664px);
    }
}

@-moz-keyframes mspin-rotate {
    from {
        -moz-transform: rotate(0deg);
    }

    to {
        -moz-transform: rotate(360deg);
    }
}

@-moz-keyframes mspin-revrot {
    from {
        -moz-transform: rotate(0deg);
    }

    to {
        -moz-transform: rotate(-360deg);
    }
}

@keyframes mspin-medium-film {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(-11664px);
    }
}

@keyframes mspin-rotate {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes mspin-revrot {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(-360deg);
    }
}

/* 加载动画 */

i.spinner-third {
    animation: mspin-rotate 600ms linear infinite;
    margin-left: -1px;
}

/* vue动画 */
/* 
页面切换动画
page-winui: 模仿winui
fade: 淡入淡出
move-up: 上移
move-down: 下移
*/
.page-winui-leave-active {
    transition: all .1s ease;
}

.page-winui-enter-active {
    transition: all .3s cubic-bezier(0, 0.75, 0.2, 1)
}

.page-winui-leave-from {
    opacity: 1;
}

.page-winui-leave-to {
    opacity: 0;
}

.page-winui-enter-from {
    transform: translate(0, 70px);
}

.page-winui-enter-to {
    transform: translate(0, 0);
}

.fade-leave-active,
.fade-enter-active {
    transition: all .1s ease;
}

.fade-leave-from,
.fade-enter-to {
    opacity: 1;
}

.fade-leave-to,
.fade-enter-from {
    opacity: 0;
}

.zoom-out-leave-active {
    transition: all 80ms cubic-bezier(0.65, 0, 1, 0.42)
}

.zoom-out-enter-active {
    transition: all 250ms cubic-bezier(0, 0.65, 0.26, 1);
}

.zoom-out-leave-from {
    transform: scale(1);
    opacity: 1;
}

.zoom-out-leave-to {
    transform: scale(1.03);
    opacity: 0;
}

.zoom-out-enter-from {
    transform: scale(0.9);
    opacity: 0;
}

.zoom-out-enter-to {
    transform: scale(1);
    opacity: 1;
}

.zoom-in-leave-active {
    transition: all 80ms cubic-bezier(0.65, 0, 1, 0.42)
}

.zoom-in-enter-active {
    transition: all 250ms cubic-bezier(0, 0.65, 0.26, 1);
}

.zoom-in-leave-from {
    transform: scale(1);
    opacity: 1;
}

.zoom-in-leave-to {
    transform: scale(0.9);
    opacity: 0;
}

.zoom-in-enter-from {
    transform: scale(1.03);
    opacity: 0;
}

.zoom-in-enter-to {
    transform: scale(1);
    opacity: 1;
}

.slide-up-leave-active {
    transition: all 80ms cubic-bezier(0.65, 0, 1, 0.42)
}

.slide-up-enter-active {
    transition: all 250ms cubic-bezier(0, 0.65, 0.26, 1);
}

.slide-up-leave-from {
    transform: translate(0, 0px);
    opacity: 1;
}

.slide-up-leave-to {
    transform: translate(0, -40px);
    opacity: 0;
}

.slide-up-enter-from {
    transform: translate(0, 40px);
    opacity: 0;
}

.slide-up-enter-to {
    transform: translate(0, 0px);
    opacity: 1;
}

.slide-down-leave-active {
    transition: all 80ms cubic-bezier(0.65, 0, 1, 0.42)
}

.slide-down-enter-active {
    transition: all 250ms cubic-bezier(0, 0.65, 0.26, 1);
}

.slide-down-leave-from {
    transform: translate(0, 0px);
    opacity: 1;
}

.slide-down-leave-to {
    transform: translate(0, 40px);
    opacity: 0;
}

.slide-down-enter-from {
    transform: translate(0, -40px);
    opacity: 0;
}

.slide-down-enter-to {
    transform: translate(0, 0px);
    opacity: 1;
}
/* 
.list-item-move, */
/* 对移动中的元素应用的过渡 */
.list-item-enter-active {
    transition: all 300ms ease;
}

.list-item-enter-from,
.list-item-leave-to {
    opacity: 0;
    transform: scale(0.99);
}

/* 确保将离开的元素从布局流中删除
  以便能够正确地计算移动的动画。 */
.list-item-leave-active {
   position: absolute;
   left: 0;
   right: 0;
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::after,
    *::before {
        animation: none !important;
        transition: none !important;
    }
}